"use strict";var Game=function(){this.grid=[4,4],this.gridZone={a1:{digit:0,isAbleMarge:!0},a2:{digit:0,isAbleMarge:!0},a3:{digit:0,isAbleMarge:!0},a4:{digit:0,isAbleMarge:!0},b1:{digit:0,isAbleMarge:!0},b2:{digit:0,isAbleMarge:!0},b3:{digit:0,isAbleMarge:!0},b4:{digit:0,isAbleMarge:!0},c1:{digit:0,isAbleMarge:!0},c2:{digit:0,isAbleMarge:!0},c3:{digit:0,isAbleMarge:!0},c4:{digit:0,isAbleMarge:!0},d1:{digit:0,isAbleMarge:!0},d2:{digit:0,isAbleMarge:!0},d3:{digit:0,isAbleMarge:!0},d4:{digit:0,isAbleMarge:!0}},this.gridZoneKeys=_.keys(this.gridZone)};Game.prototype.generateGrid=function(){for(var a=this,b="",c=0;c<a.grid[0];c++)b+=new Array(a.grid[1]+1).join('<div class="puzzle--game--node"></div>');$(".puzzle--game").prepend(b)},Game.prototype.start=function(){this.generateGrid(),this.generateNblock(),this.watchKeyboard()},Game.prototype.generateNblock=function(a){var b=this;a="undefined"!=typeof a?a:2;for(var c=_.sample(this.gridZoneKeys,a),d="",e=0;a>e;e++){var f=2;d+='<div class="puzzle--game--tiles--item '+c[e]+'">'+f+"</div>",b.gridZone[c[e]].digit=f}$(".puzzle--game--tiles").append(d)},Game.prototype.watchKeyboard=function(){var a=this;$("html").keydown(function(b){switch(b.which>=38&&b.which<=40&&b.preventDefault(),b.which){case 39:a.keyHandler("right");break;case 37:a.keyHandler("left");break;case 38:a.keyHandler("top");break;case 40:a.keyHandler("bottom")}})},Game.prototype.keysHasValue=function(){var a=_.mapObject(this.gridZone,function(a){return a.digit>0}),b=[];return _.mapObject(a,function(a,c){a===!0&&b.push(c)}),b},Game.prototype.getGridKeysByColumn=function(){var a=_.groupBy(this.gridZoneKeys,function(a,b){return Math.floor(b/4)});return a},Game.prototype.getGridKeysByRow=function(){for(var a={},b=this.getGridKeysByColumn(),c=0;4>c;c++)a[c]=[b[0][c],b[1][c],b[2][c],b[3][c]];return a},Game.prototype.keyHandler=function(a){var b,c=this,d=this.keysHasValue();"top"===a||"bottom"===a?b=this.getGridKeysByColumn():("left"===a||"right"===a)&&(b=this.getGridKeysByRow()),"left"===a||"top"===a?_.each(b,function(a,c){b[c].reverse()}):("right"===a||"bottom"===a)&&d.reverse(),_.each(d,function(a){var d=a,e=c.gridZone[a].digit,f=!1;_.each(b,function(b){f=!1;var g=_.indexOf(b,a);if(-1!==g)for(var h=g;4>h;h++)h>g&&(0===c.gridZone[b[h]].digit?d=b[h]:c.gridZone[b[h]].digit===c.gridZone[a].digit&&c.gridZone[b[h]].isAbleMarge===!0&&(d=b[h],e+=e,f=!0));f===!0&&(c.gridZone[a].digit=0,c.gridZone[d].isAbleMarge=!1)}),c.change({old:{tile:a,val:0},"new":{tile:d,val:e}})}),c.resetMergeValue()},Game.prototype.resetMergeValue=function(){var a=this;_.each(a.gridZone,function(b,c){a.gridZone[c].isAbleMarge=!0})},Game.prototype.change=function(a){var b=this;a.old.tile!==a["new"].tile&&($(".puzzle--game--tiles--item."+a["new"].tile).length>0&&$(".puzzle--game--tiles--item."+a["new"].tile).remove(),$(".puzzle--game--tiles--item."+a.old.tile).removeClass(a.old.tile).addClass(a["new"].tile).html(a["new"].val),b.gridZone[a.old.tile].digit=a.old.val,b.gridZone[a["new"].tile].digit=a["new"].val)},jQuery(document).ready(function(){var a=new Game;a.start()}),jQuery(document).ready(function(a){a("html").addClass("js")});